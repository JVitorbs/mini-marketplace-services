generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int           @id @default(autoincrement())
  nome      String
  email     String        @unique
  senhaHash String
  role      Role
  criadoEm  DateTime      @default(now())
  agendas   Agenda[]      @relation("PrestadorAgendas")
  contratos Contratacao[] @relation("ClienteContratacoes")
  servicos  Servico[]     @relation("PrestadorServicos")
}

model Servico {
  id          Int               @id @default(autoincrement())
  prestadorId Int
  tipo        String
  nome        String
  descricao   String
  criadoEm    DateTime          @default(now())
  prestador   Usuario           @relation("PrestadorServicos", fields: [prestadorId], references: [id])
  variacoes   VariacaoServico[]
}

model VariacaoServico {
  id         Int           @id @default(autoincrement())
  servicoId  Int
  nome       String
  preco      Decimal       @db.Decimal(10, 2)
  duracaoMin Int
  contratos  Contratacao[]
  servico    Servico       @relation(fields: [servicoId], references: [id])
}

model Agenda {
  id          Int           @id @default(autoincrement())
  prestadorId Int
  dataInicio  DateTime
  dataFim     DateTime
  disponivel  Boolean       @default(true)
  prestador   Usuario       @relation("PrestadorAgendas", fields: [prestadorId], references: [id])
  contratos   Contratacao[]
}

model Contratacao {
  id           Int             @id @default(autoincrement())
  clienteId    Int
  variacaoId   Int
  agendaId     Int
  status       Status          @default(ATIVA)
  contratadoEm DateTime        @default(now())
  agenda       Agenda          @relation(fields: [agendaId], references: [id])
  cliente      Usuario         @relation("ClienteContratacoes", fields: [clienteId], references: [id])
  variacao     VariacaoServico @relation(fields: [variacaoId], references: [id])
}

enum Role {
  CLIENTE
  PRESTADOR
}

enum Status {
  ATIVA
  CANCELADA
}
